{"pages":[],"posts":[{"title":"call和apply的用法及区别","text":"call()和apply()的作用call与apply用于改变对象的执行上下文 什么是对象上下文？对象上下文是指当前函数运行的环境，我们在书写一个函数时常会用到this，而this就指向当前的执行上下文 为什么改变执行上下文假设我们寝室有A、B两人。A有一个电热水壶但是B没有，但是突然有一天，B由于某种原因需要用电热水壶，那么B是买一个还是借用A的呢？答案不言而喻。而call和apply就可以借用别的函数中的方法 call()和apply()的基本使用call()function.call(obj,arg1,arg2,...,argN); 调用apply()与call()必须是一个函数 第一个参数是要改变执行上下文的对象，也就是将this指向该对象 第二个参数是要传入function的参数apply()function.apply(obj,[args]); apply的使用方法基本与call相同 不同在于apply传入的参数必须是一个数组或是伪数组，但最终都会被转成伪数组传入argumens中 对象继承由于可以改变this指向，也就可以实现继承 function a() { this.name=&apos;aa&apos;; this.show=function () { console.log(this.name); } } function b() { a.call(this); this.show(); console.log(this.name); } b();","path":"2018/04/10/call和apply的用法及区别/"},{"title":"my first","text":"#一级标题 ##二级标题 ###三级标题 ####四级标题 #####五级标题 ######六级标题斜体 加粗无序列表 candy gum fish 有序列表 candy gum fish 这是一个链接","path":"2018/04/09/my-first/"},{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","path":"2018/04/02/hello-world/"}]}